<Window x:Class="DDMAutoGUI.windows.DebugWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DDMAutoGUI.windows"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Title="Debug Window" Height="850" Width="750" Background="WhiteSmoke" Icon="/images/icons/screwdriver-wrench-solid.png" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip">

    <Grid>
        <StackPanel Orientation="Vertical">

            <GroupBox Header="Version Information">
                <StackPanel Orientation="Vertical">
                    <Label x:Name="managerVersionLabel" Content="(Manager version)" Padding="3"/>
                    <Label x:Name="tcsVersionLabel" Content="(TCS version)" Padding="3"/>
                    <Label x:Name="configVersionLabel" Content="(config version)" Padding="3"/>
                </StackPanel>
            </GroupBox>

            <GroupBox x:Name="autoStatusGroupBox" Header="Auto Status">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Text="Starts and stops the UI periodically requesting status information from the status thread. Updates indicators below."  TextWrapping="Wrap" Margin="6,6,6,12"/>


                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" Margin="0,0,13,0">
                        <Button x:Name="startAutoStatusBtn" Content="(Start Auto)" Click="startAutoStatusBtn_Click"/>
                        <Button x:Name="stopAutoStatusBtn" Content="(Stop Auto)" Click="stopAutoStatusBtn_Click"/>
                    </StackPanel>

                    <Grid Grid.Row="1" Grid.Column="1" Height="102" Background="#FFECECEC">

                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="5,5,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170">
                            <TextBlock Name="powerEnabledLabel" Text="Power Enabled" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="281,6,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="dispensingLabel" Text="Dispensing" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="409,6,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="vmAlarmLabel" Text="VM Alarm" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="352,6,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="vmEOCLabel" Text="VM EOC" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>


                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="521,70,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="linearIn1" Text="Linear In 1" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="445,70,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="linearIn2" Text="Linear In 2" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="232,70,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="linearIn3" Text="Linear In 3" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>

                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="75,34,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100">
                            <TextBlock Name="posRotaryText" Text="(no data)" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>
                        <Border BorderBrush="#AAA" BorderThickness="1" Margin="75,63,0,0" Padding="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100">
                            <TextBlock Name="posLinearText" Text="(no data)" Foreground="Black" HorizontalAlignment="Center"/>
                        </Border>

                        <Rectangle HorizontalAlignment="Left" Height="15" Margin="232,50,0,0" VerticalAlignment="Top" Width="352" RenderTransformOrigin="0.5,0.5" Fill="#FF9E9E9E">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle HorizontalAlignment="Left" Height="32" Margin="243,6,0,0" VerticalAlignment="Top" Width="20" RenderTransformOrigin="0.5,0.5" Fill="#FF9E9E9E">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Label Content="Rotary Pos" HorizontalAlignment="Left" Margin="6,34,0,0" VerticalAlignment="Top"/>
                        <Label Content="Linear Pos" HorizontalAlignment="Left" Margin="6,60,0,0" VerticalAlignment="Top"/>

                    </Grid>




                </Grid>
            </GroupBox>

            <GroupBox x:Name="statusGroupBox" Header="Status Thread Commands">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Text="Sends commands to the status thread." TextWrapping="Wrap" Margin="6,6,6,12"/>

                    <Button x:Name="statusBtn" Grid.Row="1" Grid.Column="0" Content="System Status" Click="statusBtn_Click"/>
                    <Label x:Name="statusOutput" Grid.Row="1" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="closeValvesBtn" Grid.Row="2" Grid.Column="0" Content="Close All Valves" Click="closeValvesBtn_Click" Style="{DynamicResource PrimaryBlueButton}" Padding="2,2,2,2"/>
                    <Label x:Name="closeValvesOutput" Grid.Row="2" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                </Grid>
            </GroupBox>

            <GroupBox x:Name="robotGroupBox" Header="Robot Thread Commands">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--
                    <Button x:Name="spinBySpeedBtn" Grid.Row="0" Grid.Column="0" Content="Spin by speed" Click="spinBySpeedBtn_Click"/>
                    <TextBox x:Name="spinBySpeedInput" Grid.Row="0" Grid.Column="1" Margin="3" Padding="2"/>
                    <Label x:Name="spinBySpeedOutput" Grid.Row="0" Grid.Column="2" Content="(return value)"/>

                    <Button x:Name="spinByTimeBtn" Grid.Row="1" Grid.Column="0" Content="Spin by time" Click="spinByTimeBtn_Click"/>
                    <TextBox x:Name="spinByTimeInput" Grid.Row="1" Grid.Column="1" Margin="3" Padding="2"/>
                    <Label x:Name="spinByTimeOutput" Grid.Row="1" Grid.Column="2" Content="(return value)"/>
                    -->

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Text="Sends commands to the robot thread." TextWrapping="Wrap" Margin="6,6,6,12"/>

                    <Button x:Name="enableBtn" Grid.Row="1" Grid.Column="0" Content="(Enable Power)" Click="enableBtn_Click"/>
                    <Label x:Name="enableOutput" Grid.Row="1" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="init1Btn" Grid.Row="2" Grid.Column="0" Content="Init 1" Click="init1Btn_Click" Style="{DynamicResource PrimaryBlueButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="[time]" VerticalAlignment="Center" Margin="6,0,0,0" />
                    <TextBox x:Name="init1Input" Grid.Row="2" Grid.Column="2" Margin="3" Padding="2" Text="0.00"/>
                    <Label x:Name="init1Output" Grid.Row="2" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="init2Btn" Grid.Row="3" Grid.Column="0" Content="Init 2" Click="init2Btn_Click" Style="{DynamicResource PrimaryBlueButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="[time]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="init2Input" Grid.Row="3" Grid.Column="2" Margin="3" Padding="2" Text="0.00"/>
                    <Label x:Name="init2Output" Grid.Row="3" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="initBothBtn" Grid.Row="4" Grid.Column="0" Content="Init Both" Click="initBothBtn_Click" Style="{DynamicResource PrimaryBlueButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="[time valve 1] [time valve 2]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="initBothInput" Grid.Row="4" Grid.Column="2" Text="0.00 0.00" Margin="3" Padding="2"/>
                    <Label x:Name="initBothOutput" Grid.Row="4" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>


                    <!---->


                    <Button x:Name="moveDispBtn" Grid.Row="8" Grid.Column="0" Content="Move to Dispense" Click="moveDispBtn_Click" Style="{DynamicResource PrimaryGreenButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="8" Grid.Column="1" Text="[speed %]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="moveDispInput" Grid.Row="8" Grid.Column="2" Text="40" Margin="3" Padding="2"/>
                    <Label x:Name="moveDispOutput" Grid.Row="8" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="moveLoadBtn" Grid.Row="9" Grid.Column="0" Content="Move to Load" Click="moveLoadBtn_Click" Style="{DynamicResource PrimaryGreenButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="9" Grid.Column="1" Text="[speed %]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="moveLoadInput" Grid.Row="9" Grid.Column="2" Text="40" Margin="3" Padding="2"/>
                    <Label x:Name="moveLoadOutput" Grid.Row="9" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="movePosBtn" Grid.Row="10" Grid.Column="0" Content="Move to Position" Click="movePosBtn_Click" Style="{DynamicResource PrimaryGreenButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="10" Grid.Column="1" Text="[pos (1-594)] [speed %]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="movePosInput" Grid.Row="10" Grid.Column="2" Text="350.0 50" Margin="3" Padding="2"/>
                    <Label x:Name="movePosOutput" Grid.Row="10" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <!---->

                    <Button x:Name="spinOnlyBtn" Grid.Row="11" Grid.Column="0" Content="Spin by Time" Click="spinOnlyBtn_Click" Style="{DynamicResource PrimaryOrangeButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="11" Grid.Column="1" Text="[time] [speed %]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="spinOnlyInput" Grid.Row="11" Grid.Column="2" Text="4.00 50" Margin="3" Padding="2"/>
                    <Label x:Name="spinOnlyOutput" Grid.Row="11" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                    <Button x:Name="spinToPosBtn" Grid.Row="12" Grid.Column="0" Content="Spin To Position" Click="spinToPosBtn_Click" Style="{DynamicResource PrimaryOrangeButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="12" Grid.Column="1" Text="[rel?] [pos] [speed]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="spinToPosInput" Grid.Row="12" Grid.Column="2" Text="0 5.0 50" Margin="3" Padding="2"/>
                    <Label x:Name="spinToPosOutput" Grid.Row="12" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>



                    <Button x:Name="dispenseBtn" Grid.Row="13" Grid.Column="0" Content="Dispense" Click="dispenseBtn_Click" Style="{DynamicResource PrimaryBlackButton}" Padding="2,2,2,2"/>
                    <TextBlock Grid.Row="13" Grid.Column="1" Text="[time] [lead dist] [trail dist] [overlap dist]" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    <TextBox x:Name="dispenseInput" Grid.Row="13" Grid.Column="2" Text="5.00 45 45 8.0" Margin="3" Padding="2"/>
                    <Label x:Name="dispenseOutput" Grid.Row="13" Grid.Column="3" Content="(return value)" VerticalAlignment="Center"/>

                </Grid>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>
